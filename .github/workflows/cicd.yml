name: ci

on:
  push:
    branches:
      - main
    workflow_dispatch:

env:
  AWS_REGION: us-east_1
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

jobs:
  build-and-deploy-good:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v4
      -
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
     
      -
        name: debug ECR info
        run: |
          echo "ECR_REGISTRY: ${{ env.ECR_REGISTRY }}"
          echo "AWS_REGION: ${{ env.AWS_REGION }}"
          echo "AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}"
          echo "AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}"
      
      -
        name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          region: ${{ env.AWS_REGION }}

      -
        name: build and push
        uses: aws-actions/build-and-push-image@v2
        with:
          repository-name: ${{ env.ECR_REGISTRY }}
          repository-type: public
          file: Dockerfile
          context: .
          push: true
          build-args: |
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION=${{ env.AWS_REGION }}

      -
        name: copy docker file to ec2 instance
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: Dockerfile
          target: ~/app/Dockerfile

      -
        name: deploy to ec2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd app
            docker build -t floratech01/mediplus:v3 .
            docker run -d -p 80:80 floratech01/mediplus:v3

            if ! command -v docker &> /dev/null; then
              echo "installing docker"
              sudo apt-get update
              sudo apt-get install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker $USER
              newgrp docker

            if

            
